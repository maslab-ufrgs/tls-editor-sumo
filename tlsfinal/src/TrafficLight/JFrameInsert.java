package TrafficLight;

import static TrafficLight.JPanelPhases.PhaseTabel;
import static TrafficLight.JPanelPhases.Phasedatas;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JTabbedPane;
import javax.swing.JTable;

/**
 *
 * @author luiz
 */
public class JFrameInsert extends javax.swing.JFrame {
    /**
     * Creates new form JFrameInsert
     */
    public static String Id_Junction; 
    public static int StatusWindows = 0;
    public static int OnTabbedPane = 0;
    public int phasetime = 0;
    public static int PhasesCount = 0;
    private Component JTabbednTop;
    public int phases = 0; 
    public static Map<String, String> ControlYellowTime = new HashMap<String, String>(); 
    
    public JFrameInsert() {
        PhasesCount = 0;
        if(!JPanelPhases.SavedPhaseInfo.isEmpty()){
            JPanelPhases.PhaseInfo = JPanelPhases.SavedPhaseInfo;
            PhasesCount = 0;
            if(JPanelPhases.PhaseInfo.containsKey(Id_Junction)){
                PhasesCount = Phasedatas.get(Id_Junction).size();
            }
        }else{
            phases = 0;
            
            JPanelPhases.PhaseInfo = new HashMap<String, List<List<String>>>();;
        }
        
        

        initComponents();
        
        if(!JPanelPhases.SavedPhaseInfo.isEmpty()){
            jButton4.setEnabled(true);
        }
        if(!JPanelPhases.PhaseInfo.isEmpty()){
            jButton4.setEnabled(true);
        }
        if(!JPanelPhases.PhaseTabel.isEmpty()){
            jButton4.setEnabled(true);
        }
        if(ControlYellowTime.containsKey(Id_Junction)){
                int auxYellow=Integer.parseInt(ControlYellowTime.get(Id_Junction).toString());

                if(ControlYellowTime.containsKey(Id_Junction)){
                jCheckBox1.setSelected(true);
                jSpinner5.setEnabled(true);
                jSpinner5.setValue(auxYellow);
                jSpinner5.setVisible(true);
                }
        }
        if(JPanelPhases.PhaseInfo.containsKey(Id_Junction)){
                PhasesCount = Phasedatas.get(Id_Junction).size();
        }

    }
    
    
    
    private static int currentIndex = -1;
    private static int previousIndex = -1;
    
    public void setID(String id){
    	Id_Junction = id;
        jTextField3.setText(id);
        jTextField3.setHorizontalAlignment(jTextField3.CENTER);
        jTextField3.setEnabled(false);
        UpdateSaveInfo(id);
    }
    
    public void UpdateSaveInfo(String id){
        // Reload JPanelPhases.GeneralInfo
        
        if(id != null && JPanelPhases.GeneralInfo.containsKey(id)){
            List<String> aux = JPanelPhases.GeneralInfo.get(id);
            //////System.out.println("Aux:"+aux);
            jTextField1.setText(aux.get(0));
            //jSpinner1.setValue(Integer.parseInt(aux.get(1)));
            jSpinner3.setValue(Integer.parseInt(aux.get(1))); 
            
            if(ControlYellowTime.containsKey(id)){
                int auxYellow=Integer.parseInt(ControlYellowTime.get(id).toString());

                if(ControlYellowTime.containsKey(id)){
                jCheckBox1.setSelected(true);
                jSpinner5.setEnabled(true);
                jSpinner5.setValue(auxYellow);
                jSpinner5.setVisible(true);
                }
            }
            
        }

        if(id != null && JPanelPhases.PhaseInfo.get(id) != null && JPanelPhases.PhaseInfo.containsKey(id)){
             int listsize = JPanelPhases.PhaseInfo.get(id).size();  
             ////System.out.println("Recarregando Dados....:"+id);
             
             for(int i=0; i<listsize;i++){
               addTab(jTabbedPane1,id,i);
             }
             
             jTextField4.setEnabled(true);
             jSpinner4.setEnabled(true);
             jTextField2.setText("");
             jSpinner2.setValue(0);
         }
        
        if(ControlYellowTime.containsKey(id)){
                int auxYellow=Integer.parseInt(ControlYellowTime.get(id).toString());

                if(ControlYellowTime.containsKey(id)){
                jCheckBox1.setSelected(true);
                jSpinner5.setEnabled(true);
                jSpinner5.setValue(auxYellow);
                jSpinner5.setVisible(true);
                }
        }
        
        ////System.out.println("ControlYellowTime:"+ControlYellowTime);
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "serial" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jSpinner5 = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jSpinner4 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configure Traffic Lights");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setForeground(java.awt.Color.darkGray);
        jLabel1.setText("Traffic Lights");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "General Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.lightGray));

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel5.setForeground(java.awt.Color.gray);
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Location:");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel7.setForeground(java.awt.Color.gray);
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Offset:");

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel2.setForeground(java.awt.Color.gray);
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ID:");

        jSpinner5.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner5.setEnabled(false);

        jLabel12.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel12.setForeground(java.awt.Color.gray);
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Interval:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(6, 6, 6)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinner3)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(10, 10, 10)
                .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Phase Setting", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.lightGray));

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel4.setForeground(java.awt.Color.gray);
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Name:");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel6.setForeground(java.awt.Color.gray);
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Split:");

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/addlayer.png"))); // NOI18N
        jButton1.setText("New Phase");
        jButton1.setMaximumSize(new java.awt.Dimension(67, 30));
        jButton1.setMinimumSize(new java.awt.Dimension(67, 30));
        jButton1.setPreferredSize(new java.awt.Dimension(67, 30));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(3, 3, 3)
                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel4)
                .addComponent(jLabel6)
                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Phases", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, java.awt.Color.lightGray));

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTabbedPane1.setName(""); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });
        jTabbedPane1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseDragged(evt);
            }
        });

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner4.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel9.setForeground(java.awt.Color.gray);
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Split:");

        jTextField4.setEnabled(false);
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel8.setForeground(java.awt.Color.gray);
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Name:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel3.setForeground(java.awt.Color.gray);
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Cycle Time:");

        jLabel10.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel10.setForeground(java.awt.Color.gray);
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("00");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/save.png"))); // NOI18N
        jButton5.setText(" Save");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(3, 3, 3)
                .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jTabbedPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jButton5)))
        );

        jLabel10.getAccessibleContext().setAccessibleName("00.00");

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/exit.png"))); // NOI18N
        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/delete.png"))); // NOI18N
        jButton4.setText("Delete");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/save.png"))); // NOI18N
        jButton2.setText(" Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton2)))
        );

        jCheckBox1.setText("Yes");
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel11.setForeground(java.awt.Color.gray);
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Use yellow interval ?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCheckBox1)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel1.getAccessibleContext().setAccessibleName("legenda_TLS");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // TODO add your handling code here:
        jButton2.setEnabled(true);
        jButton4.setEnabled(true);

        
       
        addTab(jTabbedPane1,jTextField2.getText());
        
        jTextField4.setEnabled(true);
        jSpinner4.setEnabled(true);
        
        // Update JPanelPhases.PhaseInfo

        
        String Aux = ""+ PhasesCount; 
        List<List<String>> MAPaux =  new ArrayList<List<String>>();
        if(JPanelPhases.PhaseInfo.get(Id_Junction)!= null){
            MAPaux= JPanelPhases.PhaseInfo.get(Id_Junction);
            MAPaux.add(Arrays.asList(Aux,jTextField2.getText(),jSpinner2.getValue().toString()));
            JPanelPhases.PhaseInfo.put(Id_Junction.toString(),MAPaux);
            //MAPaux.clear();
        }else{
            
            MAPaux.add(Arrays.asList(Aux,jTextField2.getText(),jSpinner2.getValue().toString()));
            JPanelPhases.PhaseInfo.put(Id_Junction.toString(),MAPaux);
            //MAPaux.clear();   
        }
       
         
        
        jTextField2.setText("");
        jSpinner2.setValue(0);
        phasetime = phasetime + Integer.parseInt(jSpinner2.getValue().toString());
        //////System.out.println("PhaseTime:"+phasetime );
        setphasetime(Id_Junction);
        jButton5.setEnabled(true);
        //public static Map<String, List<String>> PhaseInfo = new HashMap<String, List<String>>();
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public void setphasetime(String junctionname){
        int phasess = 0;
        //Map<String, List<List<String>>> PhaseInfo = new HashMap<String, List<List<String>>>();
        if(JPanelPhases.PhaseInfo.containsKey(junctionname)){
         List<List<String>> auxList = JPanelPhases.PhaseInfo.get(junctionname);
               for( List<String>  values : auxList ){
                    //////System.out.println("values:"+values);
                    int auxphases = 0;
                    auxphases = Integer.parseInt(values.get(2).toString());
                    phasess= auxphases + phasess ;   
               }
         }
               jLabel10.setText(""+phasess);
               jLabel10.setVisible(true);
              

        
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // TODO add your handling code here:PhaseTabel
        
    // Save Info 
    if( jCheckBox1.isSelected()){
            jSpinner5.setEnabled(true);
            ControlYellowTime.put(Id_Junction, ""+jSpinner5.getValue());
        }
    else{
            jSpinner5.setEnabled(false);
            ControlYellowTime.remove(Id_Junction);
        }
    
   JPanelPhases.SavedPhaseInfo = JPanelPhases.PhaseInfo;
   JPanelPhases.PhaseInfo = JPanelPhases.SavedPhaseInfo;
   
   JPanelPhases.setPhaseTabelModel();
   JPanelPhases.GeneralInfo.put(Id_Junction.toString(),Arrays.asList(jTextField1.getText(),jSpinner3.getValue().toString()));
   StatusWindows = 0;
   dispose();
   JPanelPhases.mapEdgesLanes2.clear();
   
  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
        StatusWindows = 0;
        JPanelPhases.mapEdgesLanes2.clear();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        JPanelPhases.PhaseInfo.clear();
        JPanelPhases.SavedPhaseInfo.clear();
        JPanelPhases.PhaseTabel.clear();
        JPanelPhases.GeneralInfo.clear();  
        JPanelPhases.Phasedatas.clear();
        StatusWindows = 0;
        dispose();
        JPanelPhases.mapEdgesLanes2.clear();
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        //int indexL = getindextab();
        //////System.out.println("Inice: "+indexL);
        
        
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        //getindextab();
        int index = jTabbedPane1.getSelectedIndex()+1;
        
        OnTabbedPane = index;
        
        //////System.out.println("Selecionado..."+index);
        
        //////System.out.println("Id:"+index+"\n");        
        

        
        if(evt.getClickCount() == 1){
        
        SetPhaseInfo(jTabbedPane1.getSelectedIndex());
        
        //JTabbednTop = jTabbedPane1.getTabComponentAt(jTabbedPane1.getTabRunCount());
        
        }
        
        
        
        if(evt.getClickCount() == 2){
            
        //RemoveValuesPhaseInfo((jTabbedPane1.getSelectedIndex()-1)); 
        RemoveValuesPhaseInfo(jTabbedPane1.getSelectedIndex());
        //jTabbedPane1.remove(jTabbedPane1.getSelectedIndex());
        
        ////System.out.println("jTabbedPane1 tem:"+jTabbedPane1.getTabCount()+"Removendo:"+jTabbedPane1.getSelectedIndex());
        removeTable(jTabbedPane1.getSelectedIndex());
        
        
        if(jTabbedPane1.getTabCount() == 1){
            //jTabbedPane1.remove(jTabbedPane1.getTabRunCount());
            
            jTabbedPane1.removeAll();
            jTabbedPane1.removeAll();
            jTextField4.setEnabled(false);
            jSpinner4.setEnabled(false);
            jButton2.setEnabled(false);
            jButton4.setEnabled(false);
            jButton5.setEnabled(false);
            
        }else{
        
       // jTabbedPane1.remove(jTabbedPane1.getTabRunCount());
            
          jTabbedPane1.remove(jTabbedPane1.getSelectedIndex());
        }
        
        
       
        }
        
        uptadetitletab();
 
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    public void removeTable(int index){
        
        List<JTable> newJlist = new ArrayList<JTable>();
        newJlist = JPanelPhases.PhaseTabel.get(Id_Junction);
        
        if(JPanelPhases.PhaseTabel.containsKey(Id_Junction)){    
            newJlist.remove(index);
            JPanelPhases.PhaseTabel.put(Id_Junction, newJlist);
            ////System.out.println("00"+PhaseTabel.get(Id_Junction).size());
        }
        
        
            repaint();
        

    }
    
    public void SetPhaseInfo(int index){
            if(JPanelPhases.PhaseInfo.containsKey(Id_Junction)){
                 List<List<String>> Mapaux = JPanelPhases.PhaseInfo.get(Id_Junction);
                 if(index > 0){
                 List<String> aux = Mapaux.get(index);
                 jTextField4.setText(aux.get(1).toString());
                 jSpinner4.setValue(Integer.parseInt(aux.get(2).toString())); 
                 }
            }
            
            //UpdateSelect(index, Id_Junction);
        
    }
    
    public void RemoveValuesPhaseInfo(int index){
        
        
        
        if(JPanelPhases.PhaseInfo.containsKey(Id_Junction)){    
            try {
            List<List<String>> Mapaux = JPanelPhases.PhaseInfo.get(Id_Junction);
            Mapaux.remove(index);
            JPanelPhases.PhaseInfo.put(Id_Junction, Mapaux);
            } catch (Exception e) {
            }
         
        }
        //SetPhaseInfo(jTabbedPane1.getSelectedIndex()+1);

    }
    
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        StatusWindows = 0;
        dispose();
        JPanelPhases.mapEdgesLanes2.clear();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void jTabbedPane1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseDragged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //////System.out.println("Salvando ..."+(OnTabbedPane-1)+" :"+ JPanelPhases.PhaseInfo.get(Id_Junction).get(OnTabbedPane-1));
        //List<String> auxlist = Arrays.asList(""+(OnTabbedPane-1),jTextField2.getText(),jSpinner2.getValue().toString());
        //JPanelPhases.PhaseInfo.get(Id_Junction).set(OnTabbedPane-1, auxlist);
  
        List<List<String>> auxphaseinf2 = new ArrayList<List<String>>();
        
        int i = 0;
        
        for( List<String>  values : JPanelPhases.PhaseInfo.get(Id_Junction) ){
            if(i == (OnTabbedPane-1)){
             //////System.out.println("Identificou....");
             auxphaseinf2.add(Arrays.asList(""+(OnTabbedPane-1),jTextField4.getText(),jSpinner4.getValue().toString()));
             //////System.out.println("auxphaseinf2"+auxphaseinf2);
            }else{  
              auxphaseinf2.add(values);
            }
            i++;
         }

         JPanelPhases.PhaseInfo.put(Id_Junction, auxphaseinf2);
         
         setphasetime(Id_Junction);
        
        
        //////System.out.println("Novo ..."+(OnTabbedPane-1)+" :"+ JPanelPhases.PhaseInfo.get(Id_Junction).get(OnTabbedPane-1));

        
        
                
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        // TODO add your handling code here:
        
       
        if( jCheckBox1.isSelected()){
            jSpinner5.setEnabled(true);
            ControlYellowTime.put(Id_Junction, ""+jSpinner5.getValue());
            ////System.out.println("ControlYellowTime"+ControlYellowTime);
        }else{
            jSpinner5.setEnabled(false);
            ControlYellowTime.remove(Id_Junction);
        }
        
        
    }//GEN-LAST:event_jCheckBox1StateChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    public void uptadetitletab(){
        for(int i = 0; i <  jTabbedPane1.getTabCount(); i++){
            jTabbedPane1.setTitleAt(i, " "+(i+1)+"º Phase");
        }
    }    
    
     
    public void addTab(JTabbedPane tabs, String Junction, int count) {
        
        JPanelPhases newphase = new JPanelPhases(Junction,count);
        
        newphase.setEnabled(true);
        
        String auxtitle = ""+(jTabbedPane1.getTabCount()+1)+"º Phase";
        jTabbedPane1.addTab(auxtitle,null,newphase,"Click twice to delete this tab.");
        List<JTable> MapAux = new ArrayList<JTable>();
        
 
        if(JPanelPhases.PhaseTabel.containsKey(Junction) && JPanelPhases.PhaseTabel.get(Junction)!= null){
            //MapAux= JPanelPhases.PhaseTabel.get(Junction);
            //JPanelPhases.PhaseTabel.put(Junction, MapAux);
            //////System.out.println("Inserindo....Valor Conhecido");
        }else{
            MapAux.add(newphase.getJtabble());
            JPanelPhases.PhaseTabel.put(Junction.toString(), MapAux); 
            ////System.out.println("Inserindo.... Novo Valor");
        }
        
        setphasetime(Id_Junction);
        PhasesCount = PhasesCount+1;
    }
    
    

    public void addTab(JTabbedPane tabs, String title) {
        
        
        JPanelPhases newphase = new JPanelPhases(Id_Junction,PhasesCount);
        newphase.setEnabled(true);  
        
        String auxtitle = ""+(jTabbedPane1.getTabCount()+1)+"º Phase";
        jTabbedPane1.addTab(auxtitle,null,newphase,"Click twice to delete this tab.");
        List<JTable> MapAux = new ArrayList<JTable>();

        // Insere nova jtabbedPane
        if(JPanelPhases.PhaseTabel.get(Id_Junction)!= null){
        MapAux= JPanelPhases.PhaseTabel.get(Id_Junction);
        MapAux.add(newphase.getJtabble());    
        JPanelPhases.PhaseTabel.put(Id_Junction.toString(), MapAux);
        
        }else{
        MapAux.add(newphase.getJtabble());
        JPanelPhases.PhaseTabel.put(Id_Junction.toString(), MapAux);
        ////System.out.println("04:"+PhaseTabel.get(Id_Junction).size());
        }
        
        

        // Salvar
        setphasetime(Id_Junction);
        PhasesCount = PhasesCount+1;
        
        
        /*
        for(int i =0; i<JPanelPhases.PhaseInfo.size();i++){
            int value = Integer.parseInt(JPanelPhases.PhaseInfo.get(Id_Junction).get(i).get(0));
            newphase.UpdateSelect(value, Id_Junction); 
        }
        */
        
        
    }
    
    
    
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    public int getindextab(){
        
        int index = jTabbedPane1.getSelectedIndex();
        
        if (index != currentIndex)
        {
          previousIndex = currentIndex;
          currentIndex = index;
          if (previousIndex != -1)
          {
            String currTabTitle = jTabbedPane1.getTitleAt(currentIndex);
            String prevTabTitle = jTabbedPane1.getTitleAt(previousIndex);
            
            //String tab = "";
        
            //tab = (jTabbedPane1.getTabRunCount()) +"º Phase";
            //////System.out.println("Aba: "+tab+  "  total:"+ jTabbedPane1.getTabCount()+" Estou:"+jTabbedPane1.getTabRunCount()+" ou "+currentIndex);
            return currentIndex;
          }
        }
        return -1;
    }
}
